{"version":3,"sources":["constants/api.ts","constants/index.ts","components/spinner/styles.ts","components/spinner/index.tsx","components/error/styles.ts","components/error/index.tsx","queries/fetchBreeds.ts","queries/fetchVotes.ts","containers/dashboard/withQuery/styles.ts","containers/dashboard/withQuery/index.tsx","components/score/styles.ts","components/score/index.tsx","hooks/useDidUpdateEffect.ts","mutations/performVote.ts","containers/breedCard/usePerformVote.ts","containers/breedCard/styles.ts","containers/breedCard/index.tsx","containers/dashboard/styles.ts","containers/dashboard/index.tsx"],"names":["api","url","__webpack_require__","d","__webpack_exports__","StyledReactLoading","styled","ReactLoading","_templateObject","Object","taggedTemplateLiteral","Spinner","_ref","delay","className","_ref$type","type","color","_ref$height","height","_ref$width","width","theme","useTheme","react_default","a","createElement","colors","blueDianne","Container","div","Image","Icon","_templateObject2","Text","p","_templateObject3","Error","children","icon","fetchBreeds","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","fetch","concat","method","headers","x-api-key","process","sent","abrupt","json","stop","apply","this","arguments","fetchVotes","fetchVotes_regeneratorRuntime","subId","_x","Wrapper","withQuery","Component","props","formatMessage","useFormatMessage","_useQuery","useQuery","breedsData","data","breedsIsLoading","isLoading","breedsIsError","error","_useQuery2","votesData","votesIsLoading","votesIsError","spinner","iconName","alt","get","assign","Star","styles_templateObject","StarContainer","label","Name","_templateObject4","Score","amount","name","styles_Wrapper","startCase","toConsumableArray","Array","map","_","index","isFullStar","key","useDidUpdateEffect","callback","dependencies","didMount","useRef","useEffect","current","performVote","_ref2","performVote_regeneratorRuntime","imageId","value","Content-Type","body","JSON","stringify","image_id","sub_id","usePerformVote","queryClient","useQueryClient","useMutation","newVote","onMutate","_onMutate","usePerformVote_regeneratorRuntime","previousVotes","cancelQueries","getQueryData","setQueryData","onError","err","variables","context","onSettled","invalidateQueries","WikipediaButton","Button","breedCard_styles_templateObject","ThumbIcon","styles_templateObject2","HeartIcon","styles_templateObject3","UpVoteButton","styles_templateObject4","DownVoteButton","_templateObject5","ButtonContainer","_templateObject6","_templateObject7","media","mobile","MainContainer","_templateObject8","_templateObject9","white","_ref3","helpers","hexToRgba","downriver","_ref4","_templateObject10","Title","h1","_templateObject11","Description","_templateObject12","ScoresWrapper","_templateObject13","HeartContainer","_templateObject14","BreedCard","id","image","description","adaptability","affection_level","child_friendly","dog_friendly","health_issues","intelligence","energy_level","social_needs","wikipedia_url","reference_image_id","vote","navigate","useNavigate","prevVote","useStateValue","slicedToArray","updateState","toast","scores","handleClick","mutate","loading","kind","event","window","open","stopPropagation","message","onClick","routes","images","src","breedCard_styles_Wrapper","entries","_ref5","score","dashboard_styles_templateObject","dashboard_styles_templateObject2","votePerImage","useMemo","reduce","acc","val","objectSpread","defineProperty","styles_Container","styles_Title","el","breedCard"],"mappings":"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","file":"static/js/5.6a758d75.chunk.js","sourcesContent":["const api: Record<string, string> = {\n  url: 'https://api.thecatapi.com/v1',\n};\n\nexport { api };\n","export { api } from './api';\n","import styled from 'styled-components';\nimport ReactLoading from 'react-loading';\n\nexport const StyledReactLoading = styled(ReactLoading)``;\n","import React from 'react';\nimport { LoadingType } from 'react-loading';\nimport { useTheme } from 'styled-components';\n\nimport { ThemeType } from '../../theme';\n\nimport { StyledReactLoading } from './styles';\n\ntype SpinnerType = {\n  type?: LoadingType;\n  color?: string;\n  height?: string;\n  width?: string;\n  delay?: number;\n  className?: string;\n};\n\nconst Spinner = ({\n  delay,\n  className,\n  type = 'spin',\n  color,\n  height = 'auto',\n  width = '20rem',\n}: SpinnerType) => {\n  const theme = useTheme() as ThemeType;\n\n  return (\n    <StyledReactLoading\n      className={className}\n      type={type}\n      color={color || theme.colors.blueDianne}\n      height={height}\n      width={width}\n      delay={delay}\n    />\n  );\n};\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nimport Icon from '../icon';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  max-height: 10rem;\n  max-width: 50%;\n`;\n\nexport const Image = styled(Icon)`\n  display: flex;\n  align-self: flex-start;\n  max-height: 10rem;\n  max-width: auto;\n`;\n\nexport const Text = styled.p`\n  margin-left: 1rem;\n  font-size: 2.5rem;\n  line-height: 3rem;\n`;\n","import React from 'react';\n\nimport { Container, Text, Image } from './styles';\n\ntype ErrorType = {\n  className?: string;\n  icon: { iconName: string; alt: string };\n  children: React.ReactNode;\n};\n\nconst Error = ({ className, children, icon }: ErrorType) => (\n  <Container className={className}>\n    <Image {...icon} />\n    <Text>{children}</Text>\n  </Container>\n);\n\nexport default Error;\n","import { api } from '../constants';\n\nconst fetchBreeds = async () => {\n  const response = await fetch(`${api.url}/breeds`, {\n    method: 'GET',\n    headers: {\n      'x-api-key': process.env.REACT_APP_API_KEY || '',\n    },\n  });\n  return response.json();\n};\n\nexport default fetchBreeds;\n","import { api } from '../constants';\n\nconst fetchVotes = async (subId: string) => {\n  const response = await fetch(`${api.url}/votes?sub_id=${subId}&limit=1000`, {\n    method: 'GET',\n    headers: {\n      'x-api-key': process.env.REACT_APP_API_KEY || '',\n    },\n  });\n  return response.json();\n};\n\nexport default fetchVotes;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport { get } from 'lodash';\nimport { useQuery, UseQueryResult } from 'react-query';\n\nimport Error from '../../../components/error';\nimport Spinner from '../../../components/spinner';\nimport fetchBreeds from '../../../queries/fetchBreeds';\nimport fetchVotes from '../../../queries/fetchVotes';\nimport { useFormatMessage } from '../../../hooks/useFormatMessage';\n\nimport { Wrapper } from './styles';\n\nconst withQuery = <T extends object>(Component: React.FC<T>): React.FC<T> => {\n  return (props: T) => {\n    const formatMessage = useFormatMessage();\n\n    const {\n      data: breedsData,\n      isLoading: breedsIsLoading,\n      error: breedsIsError,\n    }: UseQueryResult = useQuery('breeds', fetchBreeds);\n\n    const {\n      data: votesData,\n      isLoading: votesIsLoading,\n      error: votesIsError,\n    }: UseQueryResult = useQuery(['votes', { subId: process.env.REACT_APP_API_KEY }], () =>\n      fetchVotes(process.env.REACT_APP_API_KEY as string),\n    );\n\n    if (breedsIsLoading || votesIsLoading)\n      return (\n        <Wrapper>\n          <Spinner />\n        </Wrapper>\n      );\n\n    if (breedsIsError || votesIsError)\n      return (\n        <Error icon={{ iconName: 'error', alt: formatMessage('common.errorIconAlt') }}>\n          <span>{get(breedsIsError || votesIsError, 'message', '')}</span>\n        </Error>\n      );\n\n    return <Component {...props} breedsData={breedsData} votesData={votesData} />;\n  };\n};\n\nexport default withQuery;\n","import styled from 'styled-components';\nimport Icon from '../../components/icon';\n\nexport const Star = styled(Icon)`\n  max-width: 1.6rem;\n  max-height: 1.6rem;\n`;\n\nexport const Wrapper = styled.div`\n  justify-content: center;\n  margin-right: 1rem;\n  &:last-of-type {\n    margin-right: 0rem;\n  }\n`;\n\nexport const StarContainer = styled.label`\n  display: flex;\n  flex-direction: row;\n  display: inline-flex;\n`;\n\nexport const Name = styled.p``;\n","import React from 'react';\nimport startCase from 'lodash/startCase';\n\nimport { useFormatMessage } from '../../hooks/useFormatMessage';\n\nimport { Wrapper, StarContainer, Star, Name } from './styles';\n\ntype ScoreType = {\n  amount: number;\n  name: string;\n};\n\nconst Score = ({ amount, name }: ScoreType) => {\n  const formatMessage = useFormatMessage();\n\n  return (\n    <Wrapper>\n      <Name>{startCase(name)}</Name>\n      {[...Array(5)].map((_, index) => {\n        const isFullStar = index < amount;\n        return (\n          <StarContainer key={index}>\n            <Star\n              iconName={isFullStar ? 'star' : 'emptyStar'}\n              alt={formatMessage(`score.${isFullStar ? 'starAlt' : 'emptyStarAlt'}`)}\n            />\n          </StarContainer>\n        );\n      })}\n    </Wrapper>\n  );\n};\n\nexport default Score;\n","import { useEffect, useRef } from 'react';\n\nconst useDidUpdateEffect = (callback: (...args: any) => any, dependencies: any[]) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) callback();\n    else didMount.current = true;\n  }, dependencies);\n};\n\nexport default useDidUpdateEffect;\n","import { NewVote } from '../types';\nimport { api } from '../constants';\n\nconst performVote = async ({ imageId, value }: NewVote) => {\n  const response = await fetch(`${api.url}/votes`, {\n    method: 'POST',\n    headers: {\n      'x-api-key': process.env.REACT_APP_API_KEY || '',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      image_id: imageId,\n      value,\n      sub_id: process.env.REACT_APP_API_KEY,\n    }),\n  });\n\n  return response.json();\n};\n\nexport default performVote;\n","import { useMutation, useQueryClient } from 'react-query';\n\nimport performVote from '../../mutations/performVote';\nimport { Vote, NewVote } from '../../types';\n\nconst usePerformVote = () => {\n  const queryClient = useQueryClient();\n\n  return useMutation((newVote: NewVote) => performVote(newVote), {\n    onMutate: async (newVote: NewVote) => {\n      await queryClient.cancelQueries(['votes', { subId: process.env.REACT_APP_API_KEY }]);\n\n      const previousVotes = queryClient.getQueryData<Vote[]>([\n        'votes',\n        { subId: process.env.REACT_APP_API_KEY },\n      ]);\n\n      if (previousVotes) {\n        queryClient.setQueryData<Vote[]>(\n          ['votes', { subId: process.env.REACT_APP_API_KEY }],\n          [...previousVotes, { image_id: newVote.imageId, value: newVote.value } as Vote],\n        );\n      }\n\n      return { previousVotes };\n    },\n    onError: (err, variables, context) => {\n      if (context && context.previousVotes) {\n        queryClient.setQueryData(\n          ['votes', { subId: process.env.REACT_APP_API_KEY }],\n          context.previousVotes,\n        );\n      }\n    },\n    onSettled: () => {\n      queryClient.invalidateQueries(['votes', { subId: process.env.REACT_APP_API_KEY }]);\n    },\n  });\n};\n\nexport default usePerformVote;\n","import styled from 'styled-components';\n\nimport Icon from '../../components/icon';\nimport Button from '../../components/button';\n\nexport const WikipediaButton = styled(Button)``;\n\nexport const ThumbIcon = styled(Icon)`\n  height: 1.6rem;\n  width: 1.6rem;\n`;\n\nexport const HeartIcon = styled(Icon)`\n  height: 2.4rem;\n  width: 2.4rem;\n`;\n\nexport const UpVoteButton = styled(Button)`\n  margin-right: 0.5rem;\n`;\nexport const DownVoteButton = styled(Button)`\n  align-self: flex-end;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const Image = styled(Icon)`\n  max-height: 100%;\n  max-width: 40rem;\n  border-radius: 1rem;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  ${({ theme }) => theme.media.mobile} {\n    display: none;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  background: ${({ theme }) => theme.colors.white};\n  box-shadow: 0px 0px 20px ${({ theme }) => theme.helpers.hexToRgba(theme.colors.downriver, 0.05)};\n  border-radius: 1rem;\n  padding: 0;\n  display: flex;\n  margin-bottom: 1.5rem;\n  max-width: 100rem;\n  max-height: 32rem;\n  cursor: pointer;\n  ${({ theme }) => theme.media.mobile} {\n    max-width: 100%;\n    max-height: none;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n`;\n\nexport const Title = styled.h1``;\n\nexport const Description = styled.p`\n  margin-bottom: 1rem;\n`;\n\nexport const ScoresWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const HeartContainer = styled.div`\n  margin: 0 2rem;\n  display: flex;\n  align-items: center;\n`;\n","import React, { useRef } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toast';\nimport { useNavigate } from 'react-router-dom';\n\nimport Score from '../../components/score';\nimport Spinner from '../../components/spinner';\nimport routes from '../../containers/app/routes';\nimport useDidUpdateEffect from '../../hooks/useDidUpdateEffect';\nimport { Breed } from '../../types';\nimport { useFormatMessage } from '../../hooks/useFormatMessage';\nimport { useStateValue, StoreContextType } from '../../store';\n\nimport usePerformVote from './usePerformVote';\nimport {\n  Container,\n  Title,\n  Description,\n  ScoresWrapper,\n  Image,\n  Wrapper,\n  WikipediaButton,\n  MainContainer,\n  ButtonContainer,\n  UpVoteButton,\n  DownVoteButton,\n  ThumbIcon,\n  HeartIcon,\n  HeartContainer,\n} from './styles';\n\nconst BreedCard = ({\n  id,\n  image,\n  name,\n  description,\n  adaptability,\n  affection_level,\n  child_friendly,\n  dog_friendly,\n  health_issues,\n  intelligence,\n  energy_level,\n  social_needs,\n  wikipedia_url,\n  reference_image_id,\n  vote,\n}: Breed & { vote: number }) => {\n  const formatMessage = useFormatMessage();\n  const navigate = useNavigate();\n  const performVote = usePerformVote();\n  const prevVote = useRef(vote);\n  const [_, { updateState }] = useStateValue() as StoreContextType;\n\n  useDidUpdateEffect(() => {\n    if (prevVote.current !== vote)\n      toast[vote ? 'success' : 'error'](\n        formatMessage(`breedCard.${vote ? 'liked' : 'unliked'}`, { name }),\n      );\n  }, [vote]);\n\n  const scores = {\n    adaptability,\n    affection_level,\n    dog_friendly,\n    child_friendly,\n    health_issues,\n    intelligence,\n    energy_level,\n    social_needs,\n  };\n\n  const handleWikipediaClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    window.open(wikipedia_url, '_blank');\n    event.stopPropagation();\n  };\n\n  const handleClick = () => {\n    updateState('currentCat', name);\n    navigate(`${routes.images}/${id}`);\n  };\n\n  const handleUpVote = () => performVote.mutate({ imageId: reference_image_id, value: 1 });\n  const handleDownVote = () => performVote.mutate({ imageId: reference_image_id, value: 0 });\n\n  return (\n    <MainContainer>\n      <ButtonContainer>\n        <DownVoteButton\n          handleClick={handleDownVote}\n          loading={performVote.isLoading}\n          kind={performVote.isLoading || vote === 0 ? 'disabled' : 'secondary'}\n        >\n          <ThumbIcon iconName=\"unlike\" alt={formatMessage('breedCard.unlike')} />\n        </DownVoteButton>\n        <HeartContainer>\n          {performVote.isLoading ? (\n            <Spinner width=\"2.4rem\" height=\"2.4rem\" />\n          ) : (\n            <HeartIcon\n              iconName={vote ? 'heart' : 'emptyHeart'}\n              alt={formatMessage(`breedCard.${vote ? 'heart' : 'emptyHeart'}`)}\n            />\n          )}\n        </HeartContainer>\n        <UpVoteButton\n          handleClick={handleUpVote}\n          loading={performVote.isLoading}\n          kind={performVote.isLoading || vote === 1 ? 'disabled' : 'primary'}\n        >\n          <ThumbIcon iconName=\"like\" alt={formatMessage('breedCard.like')} />\n        </UpVoteButton>\n        <WikipediaButton handleClick={handleWikipediaClick}>\n          <FormattedMessage id=\"breedCard.wikipedia\" />\n        </WikipediaButton>\n      </ButtonContainer>\n      <Container onClick={handleClick}>\n        {image && <Image src={image.url} alt=\"Cat image\" />}\n        <Wrapper>\n          <Title>{name}</Title>\n          <Description>{description}</Description>\n          <ScoresWrapper>\n            {Object.entries(scores).map(([name, amount], index) => (\n              <Score key={`${id}-${index}`} amount={amount} name={name} />\n            ))}\n          </ScoresWrapper>\n        </Wrapper>\n      </Container>\n    </MainContainer>\n  );\n};\n\nexport default BreedCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h1`\n  font-size: 4rem;\n  margin-bottom: 2rem;\n`;\n","import React, { useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport withQuery from './withQuery';\nimport BreedCard from '../../containers/breedCard';\nimport { Container, Title } from './styles';\nimport { Breed, Vote } from '../../types';\n\ntype DashboardType = { breedsData: Breed[]; votesData: Vote[] };\n\nconst Dashboard = ({ breedsData, votesData }: DashboardType) => {\n  const votePerImage = useMemo(() => {\n    const initial: Record<string, number> = {};\n\n    return votesData.reduce((acc, val) => {\n      return { ...acc, [val.image_id]: val.value };\n    }, initial);\n  }, [breedsData, votesData]);\n\n  return (\n    <Container>\n      <Title>\n        <FormattedMessage id=\"dashboard.title\" />\n      </Title>\n      {breedsData.map((el: Breed) => (\n        <BreedCard key={el.id} {...el} vote={votePerImage[el.reference_image_id] || 0} />\n      ))}\n    </Container>\n  );\n};\n\nexport default withQuery(Dashboard);\n"],"sourceRoot":""}